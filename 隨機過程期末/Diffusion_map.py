# -*- coding: utf-8 -*-
"""final_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-p2xBg6PTA7gq6fETAcHvky6WNQKmxl3
"""

import numpy as np
import math
from numpy import linalg as LA
from numpy.linalg import inv
import statistics
import cv2
from PIL import Image

from matplotlib.pyplot import plot, gca, show
from matplotlib.pyplot import figure
from matplotlib.image import imread
from matplotlib.cbook import get_sample_data
from matplotlib.offsetbox import OffsetImage, AnnotationBbox
#number of data
n=20
#dimension of data
d=256
#some constant to be determined
c=3
t=3
norm=[]
data=np.zeros((n,d,d))
# 載入n張圖片並轉成灰階
for i in range(n):
  im=Image.open("00"+str(i+1)+".jpg").convert('L')  
  data[i]=im.resize((d, d), Image.BILINEAR)
for i in range(n):
  for j in range(n):
    norm.append(np.power(LA.norm(data[i]-data[j]),2))
epsilon=c*statistics.median(norm)
W=np.zeros((n,n))
for i in range(n):
  for j in range(n):
    W[i][j]=math.exp(-np.power(LA.norm(data[i]-data[j]),2)/epsilon)

deg=[]
for i in range(n):
  deg.append(np.sum(W[i]))
D=np.diag(deg)

#P=D^(-1)*W
P=np.dot(inv(D),W)

Q=np.dot(np.dot(np.sqrt(D),P),inv(np.sqrt(D)))
Lam, V = LA.eigh(Q) #return eigenvalues(ascending order) and eigenvectors of matrix Q
Lam[::-1].sort() # from eigenvalues(ascending order) to eigenvalues(descending order)
Lam=np.diag(Lam)
#將eigenvectors順序根據eigenvalues調換
V_new=np.zeros((n,n))
for i in range(n):
  V_new[:,i]=V[:,n-1-i]
print(V_new)
print(np.dot(V_new,np.transpose(V_new)))
#將eigenvalue的matrix次方
Lam_t=LA.matrix_power(Lam, t)
Lam_t=np.diag(Lam_t)
print(Lam_t)
Phi=np.dot(inv(np.sqrt(D)),V_new)
Psi=np.dot(np.sqrt(D),V_new)

print(Phi)
print(Psi)
#Construct Diffusion map and project to 2D
coordinate=np.zeros((n,2))

for i in range(n):
  for j in range(2):
   #print(Lam_t[j+1]*Phi[i][j+1])
   coordinate[i][j]=100000*Lam_t[j+1]*Phi[i][j+1]

print(coordinate)

x_min=min(coordinate[:,0])
x_max=max(coordinate[:,0])
y_min=min(coordinate[:,1])
y_max=max(coordinate[:,1])
print(x_min, x_max, y_min, y_max)

#調整圖片大小 figsize= inch by inch 
figure(figsize=(10, 10), dpi=1000)
plot([x_min-2,x_max+2],[y_min-2,y_max+2])
for i in range(n):
  im=imread("00"+str(i+1)+".jpg")
  #要貼的圖片大小
  res=cv2.resize(im,(50, 50), interpolation=cv2.INTER_CUBIC)  
  #im=imread(get_sample_data("grace_hopper.png", asfileobj=False))    
  oi=OffsetImage(res, zoom=0.5)
  ab=AnnotationBbox(oi, (coordinate[i][0], coordinate[i][1]), xycoords='data', frameon=False)
  gca().add_artist(ab)
show()

